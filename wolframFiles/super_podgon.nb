(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    143931,       3008]
NotebookOptionsPosition[    142563,       2962]
NotebookOutlinePosition[    142911,       2977]
CellTagsIndexPosition[    142868,       2974]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Off", "[", 
  RowBox[{"General", "::", "spell1"}], "]"}]], "Input",
 CellChangeTimes->{{3.6911806901563406`*^9, 3.691180690157345*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"face", "::", "usage"}], " ", "=", " ", 
   "\"\<face[{headecc_, eyesize_, eyespacing_, \n\t\teyeeccent_, pupsize_, \
browslant_, nozesize_,\n\t\tmouthshape_, mouthsize_, mouthopening_}]\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.691180701001508*^9, 3.6911807010025086`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"face", "[", 
   RowBox[{"{", 
    RowBox[{
    "headecc_", ",", " ", "eyesize_", ",", " ", "eyespacing_", ",", " ", 
     "eyeeccent_", ",", " ", "\n", "\t  ", "pupsize_", ",", " ", "browslant_",
      ",", " ", "nozesize_", ",", " ", "mouthshape_", ",", "\n", "\t  ", 
     "mouthsize_", ",", " ", "mouthopening_"}], "}"}], "]"}], " ", ":=", "\n",
   "    ", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", "\n", "       ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"head", "[", "headecc", "]"}], ",", "\n", "        ", 
       RowBox[{"eyes", "[", 
        RowBox[{
        "eyesize", ",", " ", "eyespacing", ",", " ", "eyeeccent", ",", " ", 
         "\n", "        \t ", "pupsize"}], "]"}], ",", "\n", "        ", 
       RowBox[{"brows", "[", "browslant", "]"}], ",", " ", 
       RowBox[{"nose", "[", "nozesize", "]"}], ",", "\n", "        ", 
       RowBox[{"mouth", "[", 
        RowBox[{
        "mouthshape", ",", " ", "mouthsize", ",", " ", "mouthopening"}], 
        "]"}]}], "}"}], "]"}], ",", " ", "\n", "                    ", 
    RowBox[{"AspectRatio", " ", "->", " ", "Automatic"}], ",", "  ", "\n", 
    "                    ", 
    RowBox[{"PlotRange", "->", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.5"}], ",", " ", "1.5"}], "}"}], ",", " ", "\n", 
       "                    \t\t\t ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.5"}], ",", " ", "1.5"}], "}"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6911807165443535`*^9, 3.691180716548356*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"head", "[", "eccent_", "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xrad", " ", "=", " ", 
       RowBox[{"1", " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"eccent", " ", "-", " ", "5"}], ")"}], " ", "/", " ", 
         "25"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"yrad", " ", "=", " ", 
       RowBox[{"1", " ", "-", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"eccent", " ", "-", " ", "5"}], ")"}], " ", "/", " ", 
         "25"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Circle", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"eccent", " ", "-", " ", "5"}], "]"}], "/", "20"}]}], 
        ")"}], 
       RowBox[{"{", 
        RowBox[{"xrad", ",", " ", "yrad"}], "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.691180725727599*^9, 3.6911807257306075`*^9}, {
  3.6911807566244164`*^9, 3.6911808026198072`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"eyes", "[", 
   RowBox[{
   "size_", ",", " ", "spacing_", ",", " ", "eccent_", ",", " ", "pupsize_"}],
    "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xcenter", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "3"}], ")"}], " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"spacing", " ", "-", " ", "5"}], ")"}], " ", "/", " ", 
         "30"}]}]}], ",", 
      RowBox[{"xrad", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "6"}], ")"}], " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"size", " ", "-", " ", "5"}], ")"}], " ", "+", " ", 
           RowBox[{"(", 
            RowBox[{"eccent", " ", "-", " ", "5"}], ")"}]}], ")"}], "/", 
         "70"}]}]}], ",", "\n", "         ", 
      RowBox[{"yrad", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "6"}], ")"}], " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"size", " ", "-", " ", "5"}], ")"}], " ", "-", " ", 
           RowBox[{"(", 
            RowBox[{"eccent", " ", "-", " ", "5"}], ")"}]}], ")"}], "/", 
         "70"}]}]}]}], "}"}], ",", "\n", "  ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xcenter", ",", " ", 
          RowBox[{"1", "/", "3"}]}], "}"}], ",", "  ", 
        RowBox[{"{", 
         RowBox[{"xrad", ",", " ", "yrad"}], "}"}]}], "]"}], ",", "\n", 
      "    ", 
      RowBox[{"PointSize", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"pupsize", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
        "200"}], "]"}], ",", " ", "\n", "    ", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"xcenter", ",", " ", 
         RowBox[{"1", "/", "3"}]}], "}"}], "]"}], ",", "\n", "    ", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "xcenter"}], ",", " ", 
          RowBox[{"1", "/", "3"}]}], "}"}], ",", "  ", 
        RowBox[{"{", 
         RowBox[{"xrad", ",", " ", "yrad"}], "}"}]}], "]"}], ",", "\n", 
      "    ", 
      RowBox[{"PointSize", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"pupsize", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
        "200"}], "]"}], ",", " ", "\n", "    ", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "xcenter"}], ",", " ", 
         RowBox[{"1", "/", "3"}]}], "}"}], "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.691180736567124*^9, 3.691180742937193*^9}, {
  3.6911808180937195`*^9, 3.6911808600162883`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"brows", "[", "slant_", "]"}], " ", ":=", "  ", 
  RowBox[{"Block", "[", "\n", "       ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xstart", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "3"}], ")"}], " ", "-", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "6"}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"slant", " ", "-", " ", "5"}], ")"}], " ", 
           RowBox[{
           "Pi", " ", "\n", "       \t\t\t\t\t\t\t    ", "/", " ", "20"}]}], 
          "]"}]}]}]}], ",", "\n", "        ", 
      RowBox[{"ystart", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "/", "3"}], ")"}], " ", "-", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "6"}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"slant", " ", "-", " ", "5"}], ")"}], " ", 
           RowBox[{
           "Pi", " ", "\n", "        \t\t\t\t\t\t\t", "/", " ", "20"}]}], 
          "]"}]}]}]}], ",", "\n", "        ", 
      RowBox[{"xend", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "3"}], ")"}], " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "6"}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"slant", " ", "-", " ", "5"}], ")"}], " ", 
           RowBox[{
           "Pi", " ", "\n", "        \t\t\t\t\t\t  ", "/", " ", "20"}]}], 
          "]"}]}]}]}], ",", "\n", "        ", 
      RowBox[{"yend", " ", "=", "  ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "/", "3"}], ")"}], " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "6"}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"slant", " ", "-", " ", "5"}], ")"}], " ", 
           RowBox[{
           "Pi", " ", "\n", "        \t\t\t\t\t\t   ", "/", " ", "20"}]}], 
          "]"}]}]}]}]}], "}"}], ",", "\n", "    ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xstart", ",", " ", "ystart"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"xend", ",", " ", "yend"}], "}"}]}], "}"}], "]"}], ",", 
      "\n", "     ", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "xstart"}], ",", " ", "ystart"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "xend"}], ",", " ", "yend"}], "}"}]}], "}"}], "]"}]}],
      "}"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6911808728399906`*^9, 3.691180878331114*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nose", "[", "size_", "]"}], " ", ":=", " ", 
  RowBox[{"Block", "[", "\n", "        ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"scale", " ", "=", " ", 
      RowBox[{"1", " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"size", " ", "-", " ", "5"}], ")"}], " ", "/", " ", 
        "13"}]}]}], "}"}], ",", "\n", " ", 
    RowBox[{"Line", "[", 
     RowBox[{"scale", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"1", "/", "6"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "/", "6"}], ",", " ", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "6"}]}], "}"}], ",", " ", "\n", 
        " \t\t\t ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "6"}], ",", " ", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "6"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"1", "/", "6"}]}], "}"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6911808921042056`*^9, 3.6911808961027203`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"mouth", "[", 
   RowBox[{"shape_", ",", " ", "size_", ",", " ", "opening_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Block", "[", "\n", "  ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fx", ",", " ", "gx", ",", " ", "xstart", ",", " ", "xend", ",", " ", 
      "ystart", ",", " ", "ymin", ",", " ", "ymax", ",", " ", "xstep"}], " ", 
     "}"}], ",", "\n", " ", 
    RowBox[{
     RowBox[{"xstart", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}], " ", "-", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"size", " ", "-", " ", "5"}], ")"}], " ", "/", " ", 
        "15"}]}]}], ";", " ", "\n", " ", 
     RowBox[{"xend", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "3"}], " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"size", " ", "-", " ", "5"}], ")"}], " ", "/", " ", 
        "15"}]}]}], ";", "\n", " ", 
     RowBox[{"ystart", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"shape", " ", "-", " ", "5"}], ")"}], " ", "*", " ", 
        RowBox[{"size", " ", "/", " ", "150"}]}]}]}], ";", "\n", " ", 
     RowBox[{"ymax", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{".9", " ", "opening"}], " ", "-", " ", "1"}], ")"}], " ", 
        "/", " ", "27"}]}]}], ";", "\n", " ", 
     RowBox[{"ymin", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], " ", "-", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{".9", " ", "opening"}], " ", "-", " ", "1"}], ")"}], " ", 
        "/", " ", "30"}]}]}], ";", "\n", " ", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"Fit", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xstart", ",", " ", "ystart"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "ymax"}], "}"}], ",", " ", "\n", " \t\t   ", 
          RowBox[{"{", 
           RowBox[{"xend", ",", " ", "ystart"}], "}"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "x", ",", " ", 
          RowBox[{"x", "^", "2"}]}], "}"}], ",", " ", "x"}], "]"}]}], ";", 
     "\n", " ", 
     RowBox[{"gx", " ", "=", " ", 
      RowBox[{"Fit", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xstart", ",", " ", "ystart"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "ymin"}], "}"}], ",", "\n", " \t\t   ", 
          RowBox[{"{", 
           RowBox[{"xend", ",", " ", "ystart"}], "}"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "x", ",", " ", 
          RowBox[{"x", "^", "2"}]}], "}"}], ",", " ", "x"}], "]"}]}], ";", 
     "\n", " ", 
     RowBox[{"xstep", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"xend", " ", "-", " ", "xstart"}], ")"}], " ", "/", " ", 
       "10"}]}], ";", "\n", "    ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Line", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", " ", "fx"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
           "x", ",", " ", "xstart", ",", " ", "xend", ",", " ", "xstep"}], 
           "}"}]}], "]"}], "]"}], ",", "\n", "     ", 
       RowBox[{"Line", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", " ", "gx"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
           "x", ",", " ", "xstart", ",", " ", "xend", ",", " ", "xstep"}], 
           "}"}]}], "]"}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6911809048724127`*^9, 3.691180907971977*^9}}],

Cell[BoxData[
 RowBox[{"On", "[", 
  RowBox[{"General", "::", "spell1"}], "]"}]], "Input",
 CellChangeTimes->{{3.6911809156366653`*^9, 3.6911809156396675`*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "data27", "]"}], "\n", 
 RowBox[{
  RowBox[{"data27", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\tonie\\\\Desktop\\\\\:0443\:0447\:0435\:0431\:0430\\\
\\\:041d\:0418\:0420\\\\Data\\\\2015\\\\April\\\\27\\\\27apr_\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<ac.dat\>\""}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "7"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6435986732778397`*^9, 3.643598686513625*^9}, {
   3.6821336097779636`*^9, 3.6821336191501904`*^9}, 3.6821567667260127`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"amplitude", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"data27", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "*", 
      RowBox[{
       RowBox[{
        RowBox[{"data27", "[", 
         RowBox[{"[", "6", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], "/", 
       RowBox[{
        RowBox[{"data27", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "7"}], "}"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonLogorifmicTime", " ", "=", " ", "\n", "  ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"data27", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "3"}], "]"}], "]"}], "-", "1.68"}], ",", 
        " ", 
        RowBox[{"amplitude", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "\n", "    ", "1", ",", " ", "7"}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.6898725325147095`*^9, {3.6911745153027754`*^9, 3.691174515384488*^9}, {
   3.6911745581340632`*^9, 3.69117455827853*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"nonLogorifmicTime", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<P = 1 mW\>\"", ",", "\"\<P = 0.5 mW\>\"", ",", "\"\<P = 2 mW\>\"", 
      ",", "\"\<P = 4 mW\>\"", ",", "\"\<P = 6 mW\>\"", ",", 
      "\"\<P = 0.25 mW\>\"", ",", "\"\<P = 0.25 mW\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<mesa 1200/100\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[CapitalDelta]t ps\>\"", ",", "\"\<Amplitude W\>\""}], 
     "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "18"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "12"}], "}"}], ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "\"\<DarkRainbow\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6898725645533524`*^9, 3.689872593559142*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.237736, 0.340215, 0.575113]], 
        LineBox[CompressedData["
1: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
6OFIF89EaDQJ/gfYHU7M
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.264425, 0.423024, 0.3849]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.416394, 0.555345, 0.24182]], 
        LineBox[CompressedData["
1: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
hg==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.813033, 0.766292, 0.303458]], 
        LineBox[CompressedData["
1:eJw9V3k0FuzTFrKvz75veMhS6RVFmRGVx1rSplRICQlJRRIiRatQVJRKUpEk
vdQTJZQWS1oQlaXshELxeb/fOe5/7jNn7jNznZm5Z+biu+9y8pSUkJDQnyEh
8d/9JYR0Z/mXMXG8k3H2K6E12A8Lvk7yx8SnvQ9KVbJEkHS5hVboPiquTjtp
FGsmAlHhqeX+Gb/F0bEpX9WKrMGm4laUTusv8SbpPN3Pn63B9kOFuEXzl9ir
JWoPVUoEecNKX855jogn9997nkaekmfOYq+8Piwetim06P5mDfnkpevlO4bE
7sesU+fNFEG+lltiifaQWHKFt0yOrggK5odV7/f6KU6idEd2LBMBa1XJoGHW
oDikzXxXNHNK9mia3fljQBxz4lbhyd/WwNk96n1Fd2DaHieKnOni0y/uCuhz
C5zCp2Bx75TWuj5xgdlB7q8Ka1By65JL+tgjTt3BGVQSikAlQiNCZkO3uJSx
/l2fogg+FWU/DW7sFNcPlmTcZoigseGbWYfrD/GHiTbH7EQRfB5n5q9t7hBP
yG20PPJcBC1MZ/2KLe3i+sO745w7RUDjL/q04GureFLFjy4jbQNX/1z9lOnx
TUzpH9CR3GUDy6q6f9Lavoj1pD8tNODbwvdUI+Vj21rEwruZL2SX2ALp/W+7
kTdNYkn5WB2PQlvQP/HCvq7mk7gsB5TndduCv4HLoYJ378Xt26JOf19sB4VV
P/LOfagTa1+5fk6YYgdvo4ruBTdUi5+eZcxZVWkHOsuSqu4WvxKr2Dyck3DF
DnIP3zcMLi0XmyxVtHBVtIOWwXX/zKsoEQuVu5c+ybaFt+79c3tSH4gP9UYn
pu2whSdi15Euh0yxTPmklSDLBiT6T7kfsloFxOhDSfE+IthyPNmPEHUDDEq1
AtR41pAuUt4pYVwIY/6+6dHlyyDd+JuRFbkUDOMTnQfOLwXa76dvwlUroE+9
My0m1ApiH171LpJ/DWdhZWSspyXcunYof3JGDaxIuElYU2EBvjIDEezJOqD8
uPVHuApBc7ubo9mf9yAmCFbPOGAOSrknHVxHP0EF9YbR97eLoEpNghU60gR3
lXLCuUdNoXRBYVDV/hawrFeONKtZAMaujkGuv7+AwbYvw2sLTODMcdkN3cHf
YH95yalP5fNh8JHYInS4FfqLHozZORqBQ+9eHYWgdph07It7LvwHSgmqOqmD
HaDVe+x6Wdw8EFiWq+gG/IAJrZD2UZEhJG3fpFLU1wlhH4hOsvlzYTCZMizy
64brvtlKWxhzwKnidcOH7h6Qy1F98DnJAO78jind7tMHGcaEosRSfTitour2
J6gfymYG5vnQ9EEs9KmzNBqAy3pG1173zYLRQmPn+J8DsKsl/mZpnQ7Mqj5T
Xps3CHqZEgmGf3Vg7Y9eU2bgT+j1uusv5S6EIzNs77gbDsG3Nobx01ghlCRQ
Zmf3D8GFH8GZMmxt6MsOvDyYMwzyOQHxZYFawH32mmS6awSCzzzyXqWrBevX
pJyNnP0LNrHC5QbeasARvxHZFz2/ICnMSjpwpwDuxziFqt/+DS+Yg7Hle/gw
QOOMr/cdha+7mwdcdvKBaxjid1lvDC5+P9NesIIP9qL6L987x0CqpsOTFsSH
Iw2X3QxvjkPi170N8RZ8ePDzb92+HX+gTqo4RaDBgzZFF+snOn+hLk0hxx+4
wL2kVSH3/S94JL9tOSTkgWNBhNmKzAlI2ffIQXaQC2Gvm+4kb5uEDSoWpkcD
GLAx15naT5DAt54znqXVMyCoWLI6IVACB4zpcqNGTDhWkXvMpEYCn1RLFmrP
Z8ON00kvGgxnYBrnhXtKFRMeX7Q6HH56BpI7m52iDBlQnzW4WGNgBt5Zen9r
514KDAV+CCtfIYm+b/JeH0mngVJ4jIlPriQWf2hund1EA0Gc0YCKmhT6eYf/
8q2ig2ny15t5u6TQRPbUVc8iKqzbUtG55o0UoqrHH0ItDfx8g6+OzZbGTrXh
ggNFNIifv7H10glpjJmtkt+wng5XLRQuLemVxqD30cL5hXT4175wbbv9TOza
ePzZzA4yfKBcSj52eyYqPyuaIVtIhV6B3crZyjIocyk595g5GWTmjCnU+Mrg
ZnqElgmPDJq/m22Cq2RwIvHZuiYhCUylT0gz9GVRWliTe9eADE5qix4/ipNF
gka7iQOPAt6szr1uXbLISLyStKqMDDFtbx7MtJVD14P5f1YOEeHSQFhA1k05
zNHe6sOkkKHgr56evYI8Hgys3fFgJxlqnqv7DOyQR8vaJ/J7VCnQWSPWTKyU
xw1iJa5BAAVkLlzbunCWAkrCzhDLegpwbqziNMUq4L+9n9N7colgnD/jw6Hv
Cjhksf7n9W9T+MI6qFrWihhRtdy/hEUC76OJ1RWZitPxjUy0jPOVVZrGk3J5
wEptuxJu5zuHtZpQoMD7/eH850r4o1k9sY9FgdfB0ebrhMroJSV1mFxPgtbI
f36PRyvj5vE5+l6PiSBpR1+Q3qaMe7wlCAprSMBYVz5guVQFPfZlbzgYS4S5
W/dkd1xVwb0zX5n2RZDBwWBDV5y0KjY+u0U6XEGEbQvlr83Zqoo5fstE22MJ
ECnZ11r7VBXl3YcfdYcQwP6Iw5sidTW0WRrmFZJPhvXHtW4dt1DDaNHTtPft
RNia8Cd2c4AaukZ565+8TYSfe/tuGF5WQ5rd9aSLfqowGfY8WqpaDc8dyfXo
blYHhcMX3d9JqKOMXMSDry+JcN7rVGTmXHW009bfle1Egqt+2zfv36KOGUqT
nTklBMgNMl9ke0odC4Ppl0npRCgOIdPZT9TRl5J4q5ZAAZvNcgv7+tTxPcXh
actmdVjj2Uwu4RKm49Emqpmf4EjAAxb9y3XfEKDfMYvgGU5AK+566oQpEf6s
PtRnnEPA+p7izx6OZIgz3a0q30yYrscktOn+pELEhQceJvn8UoMry/iVt8yJ
yDYeDclqVwdDPdKPg35ETHzqtOZYBgkWGXaVrbhExHTLrttqVWSwNim9InhN
nK5H58Xnw4f+EnFRntP3+Y5E+MqPT3tuQMJ7ER8CtMqI0KvtceCcKwlzpV2X
qI4TYczAdL33cdL0f4klGOxf9IiERph0dO5NIpylSa9R6SHhkZDrJVujKSD4
O7KnhUVGpwcLy8PXk2G21GunPDsyyjOJLelyZDCdSvfhA+Tp+qzoSXZcc4uM
Bq8/6urNJEHdTz99nUYyaj6XqQ3rIUDL6FL5MUUKWpNSlvWQidA1yWp/aUZB
/1na7047UiGkVVXmkg9luv/EdLZ/3ZVKwWsL9Jsmr5PhdP/UAHtJQceuoweU
T6oD711uM3Gcgu/WXm8raiSCfsOR4jZdKmqSzXo/9lDA5Mum8w9cqPhIc9/g
AzkKWHbMDz56jIo6H8+Nm+mSoPqlTtKGf6fkXTlD3y6Qoal6MtCgk4pHf/EH
Qhwp4FsweGaSTkPu9sYLxtEk2FtcuataREORx2s3EYUKUaXpdhn7aZhdsXB+
3W0KEDITfPdk0fADJ11ioIcK7NveouUfaRi7cXVFogYZZt2zENLl6fjmTeeL
Xx50KEw2Wta1gI4fJRxlBfEUeHZRUeORF33a/uuMr5MnztGRdmfxlradVNgU
+47rVkHHwcqEn69qyOB94tafeb/puJ+Y9Y//TCoEnY36KK3DwIZ9JNnxCxQ4
lOJSUL+WgboKB9iVFRRQC7evv3GEgX/vkZ1uxZKBEa15L+QBA8uvqtmYG1JB
GDd+0q6Dgc9sLlgaRdKgYFdvDofKxADF+obSHjI82VMW37+MiZ5wLfjeeSqs
cCm8VRrMxNXfWT+UflNh45aTR89eZ6LUp4UZOpI02PbfqWdi92DGo9vrqRDo
u9hygQwLLQbUpawCqCCxcq6HgjELKcb7tii5UkFprSw2erJQNNrqMhBLgwtm
Y5vvJLKm+6umx/3R8DIWPi91s1ROoEHe8ht0p2EW1pw4c4PVQYHH9uEjGlps
VLcwMWRHUsFuXiBlxJmND75dug+SdFi3QPSz/DAbF1zZ+MqmgwZbzXlvz+ez
keRcub7hMQ0GBcR+n1Y2pl78fD5sgA4TOp1Vi0kcVB9zXlWtyoATyk3dqlYc
HBoLJm8IoME5Yn7ll90cbI67PufhRypcpcddv5cx9f69vW7ZEA1yue5R0bUc
bF04M2LjEgaYS6/OWCvFxe3+sedwAQNsFPQPzfqHixeunK389yYd1qhJuY67
c9FeaW9UThkd3CmfFr46w8UlS//YN+kyoX+san1aKRdvj7LWutnR4Y/EVeOA
QS6GMMf9DyWwoSzQNpuvzsMOu+QsRjgTXg4XnFeYxcMK19m+g4/pUL1PEPsT
eahw+vEj1fksoHUxzzWu4+Fmr/uYwKMDx+9ITJk/DzkMf6kQNgs8Ww4l3Ynl
4XsPr+KaUBboBm3ySE7nTePTNT3zMryQh679ffivKh0CbsU1eL3lYahV/Oq/
GVP1zYnuWvl9yp9NY/PTUg5InD44birBn8azXGqfoiaNj0a8i/vG3jDhxJ4A
pvJcPrbVVWdZ+DGhvsNbb2Q5H4v9RprqHRnAdtlq1ryZj+UvRynOlSzYWuVq
W7GXjwPpkqorS+mQbb52w92TfOSY2xY+DKLBz9wVPimZfMym+q2Ye4cBpho2
oVFiPuZfuyf0ZPEg4r/5+Z6PJ82SzZ7rMqBCdnHq6j7+9H6kFmKcbS4rQI1X
hw+7AAcqE676CLmCaTxqMpdCVU0EOHGRktSTz4C1+5LjfjsIcFP9oa4hXRak
dZ5K/bJNgCZhZpF1HRxo33gs+8VBAc6o3bEyYisXDN5MEZokAd58+W5JZiQb
gizCXl64I8C7ZVWXaylsKJ5iO9HPBXgC9je/yeSAlNC/y++zAM1XFHF6HZlg
c27H+NoRAQ5ENB110GTDaQUPRQsVDdR/O+dKuSEbPh7YyNQVaiCpxMFPhs8B
Xt9qPaK5Bj52PhKr7sOG/6cbqzWwdVCQofaWBTm11rZtOzVwhSd1InoBG7x6
ChRfRWtgPSvmc4w8F3I25zILLmrgHr40wXmSDSPVWXpp9zVQz91ayXeSA4ut
MsxiX2lgijhNf9VWNkQXXLANaNPAvZfCLbwr2VA11W5d/mrgmeIhlfYADhBT
T/pYkjXxxfGXv6zvc2CD8tFQfQNNvDi84CC7mAtXwiPjyEs1p/P1YyA0dWKj
Js6XeOL0mM393z4SpImLGj0LmSvYsK/er+htvCb6aSvf0/bhgNja6+XDq5ro
+euApGE4C2SK3BquFGvioEf8qfBSJtj/t7/UaeINn1n8X7P4ILO8Mnt3tyY2
UcIW37vIAYeHpUUbpbXQJ4pRMhHEhES94pdLWVpoeTJk4Z8ALjRevN8w20gL
l046Vme/5YGmWk4X1W5K9s90fsblgU/kjXGJrVrYI7i3SraYA3lDlxU7Q7WQ
U3tca3Y2B0a3pTJrE7SwWnAy3GUPFyw+ntUrztZC0x41xuFlPIi1PWF27akW
DlnmeFuqceHNoyO2Jxq08MsHQuUeCx5Q5kZs2PtTC1eX7s8zkOPBpishPlsU
hagkchlyqeHBNVJQqEhDiCylw+8a5XnQHbMzbp6ZEL+cCY7YsndKn95gy1gl
xP/xNy70EN5tkPIR4sTqXr5PCheMol/7dEcK8XK95/m2HTwI/VUe+i5FiI3y
76/ZzeNB6Y6SuMd5Qvw6uyzxTgIXFBr/Tc18IcTcBy27jaX4sNIhP/vUVyHu
Lw8cf3WfD+ee3C7aPybEetWWZbxLPGiel/nSnaCNSm035LJ6uaD9HyBdbTy1
7WBy83Yu+FFTuoyWaONmD7f2RZZ8uH80YZztoo3LVqqVPSbz4e94vKJsoPa0
Pyu/GGb/UW3MWXa0n53Ph7iWcL2Pl7WxSpsyv6x/Sj/W0/XkoTZuGpT30Bya
0vt2jGdVa6PLpxKFWRM8qP3copjwQ3s6H4yVn5gHZuggoTlt+7tILrg9rdXz
pOtgzIXKWfw6PmTNf2XmYKiD0TP+Siy6wYP+zOe2JiId9OL5F5/14YEJ48kG
npsO7i1ycHxryoeD8Q995PfrIPEz+4DvGT48n8gLHTylgwesenVbw/nwfwCb
LZE=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.812807, 0.518694, 0.303459]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.72987, 0.239399, 0.230961]], 
        LineBox[CompressedData["
1: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
13c86/02dSTrTjl8ptf3uCYUPtmvjl3OqyaNs0gwaqYvNOnqyJ1zq6mqnoQQ
q8iG7GJ17Dm0Wt+1iIQa+rYTW6eOtwrayrzjSZijvavf/506Zmof05sbRoJN
xo4ppwl1TLn5RkrqKwkpAlsErUQ0UE51bDDsGwntEa4K+toaGHnrGft+AQmq
Q+sMJJdr4PHeQLk8LxL+c91Yp4EG13MXZh4loaSVbft5pwbuPtEsm36aBO9v
lYJPYzVwZaP5cHYsjW8qVag8o4HtbN8C00QSJlryDc5d10Ad3vOPLgWSsIy6
ZBn/VAPVxcJKfqeREFuZbRv4WQO/RpQ8t9hLQiMtt86/NfB0/qYXGSkkSGYl
+5LSmmhXqSjmE0OCi/CRcEMjTWwmGvgj35NwMepQojRTE9e52J3kjSDh60h4
1h9XTVxq4xpWbUT+930k5H942Ev/6mdJmtjZqX6FQ/cXh+3dcDNHE4+rDsY7
NpHAW+3x9mKNJoY6r8n/xiDB/u/7S5smfmzpmIhYSePWjwuDBzTxesaghz99
vitv3qt25dZC0QLngF1BJKQZ1DQwFbUwOKJi8ZYMEjrOXH9rbKqFQR8fFZ2L
JEFTrKR/np0WLnGcae7YTILvobwprq1aGKcT43ZjCQnl3y8I9oVroQVPQer3
EhJ+bctSaE3VQgWvy63gS4JV+0mDmkItPMm8ejlBm4R422OWl+9r4cPSkNWq
C0hovh1ne+ytFvpE2wg/mUOCDOOgy54xLZw1RmW1+5DgfnGf72ZBbfTcwyc9
QvtflgoJX6Ghjb2PuEU19EkYOLwzcYGlNrr2ju6Ko/O/fP6trfwa7X/5f5N4
4TLHVxu/bh7J7KFIMI1t8h04pI2mzq9umNH1D//xKPxFpjZes3GSSBUh4d6O
u4l3yrVx1M80laNGgkDHrazcJ9rIVvOS6nImYdXKisLjH7Qx3G/Jry9IQkbt
1eq9k9r/8utakNvgKaGDDXt4ti2g+0HnLyF9HezvVKE7lQT/eZn9poTOv3pc
P5I6peSsgzym94a2/yDg91SSIF+QDkY+zZeeM0YA5X9YYfiIDjqcrD7wXZGE
xO4og/YLOlgjyGyKtiCBmvzWX3tTB1t8OZVD9Hkk+n2Zym/RQf1PyxcbC5DQ
+q5bMPWrDk585CQLvyBAftUbhYhZujiv8sz2FQ4keNxvNfCS00UexwM6NTS/
/EVPLVea6OJLjy9NabwkDOfW2Zqv0MUpI3WHUnsSzOVrXVQ9dHH/tvQLdcIk
7E+66cu/VxdXHZPVa/1KQN2f8vDR47qoVZlZ2vWQAOG/Apqni3fUNhdXWpKw
9uPlrAe1unj42KmWMWUSstadK7z6Whc31c/kTdJ8Pz7KqE4f1sU/gnc5Fj3E
f/V4rh42D/79jkHja7iStqvqoWj7SDD3EI3X/cpyXKyHTuf/hD39RUDQ4rHC
JY562MU7b82CPwTcLBioVvfWQ9Cd6mXWEcCl1NMgeEAPL3p4a+9uIcA6uevt
91N66KdofvoozSd5Vnt/Z4kexrYPCHc0E/Ay+PlU3SM9NHFKyyEbCfjrXtql
hx7v5I8YCdF6veGhwukfemiq7sI+Rten6Mkdg0Oi+nhpcm354gECxpZWWfrq
6OPx0vH8mWkCLErKbNeCPppFN2zNbyLgkFqhyzInfbzDczHUk48ES0s5Ra0A
fYwOixipVSLh0FUJQ5E4fYzPKS/TViXhsYrQ0h9n9TF5Hr/y0g8EiJ3gseuu
1EdeWe4qyfsEbOCecXncpI++25Ne7Kb5nwv96Vveo4/7Wu12atL92dP7V3D0
UXOJn+uuLgL+ykWMjAEuPOJf82QWCbuffsraaWyA7S7UnpBWAmrgXeF6lgHW
H5O8X/CEgDnlr6rB3QC3vt5jItROgK0m/cYZaoAX6sMzyyoJOEFfx8WPGeB1
quJW4FsC2uc+6J+8bIA1NwR04s4QoBp+e+rjbQP8GHnR4UAZjdPy0PDCAL8f
cggeVSdBjU+rseKbAXLxKnvLXSPAe69yxxkew396Q6vRwGElQyzkzSgQf0zA
hJv4dMAiQ2wzOj+klUzA8mcCQhvtDTFU/dUSZj0BsQS3IuFliNm+KNI8TkBj
BX3BjTT8N19SOj8spdIM0ehdVrfQKwKcTw/b/i4yROdMF7Uiul8uCva59Dww
/Ff/vsiPvs0dhhgw+YJf9gYBjOGO8KrvhqimsSpi2TsCwjxfJl4QMkK3sMkU
s00E1LY1ZyVoGqEgZRG2l56H/+jxUiM0mtwo6yFIQu1mcz+XtUYoN+VgJ/aU
xlsZEZSfEWrOGh54FErASqZ+klEMjXelSNVkEJB+QyNbJtsIT4hvq5MvIaBD
T6lo5poRzjgG58zaSoBmtkxNbwPt/9nkejBBgJ+IWGPLRyMMj5Ko0zlCQPkB
/o5bU0b/5mtydPbAJUnjf+eFXtNTSQbG+LNTcfHABQLiX40LhpLGqBC2/3wU
XY9nK4YUNrkY45XvZc7zbhJA72bADjbGq9vnPjIMp/EX6wfmJxrj8a6k4tS9
BMiyHadlLxnj89LArMo8AtxvrRCaXW38L58rhqRi/3NjPCI7nXlQnoCBs0sN
2/qMcWG29REBGwJMxc2W3p49H33ni217uo2AiOj5dlfk5+P77XEB9qUE3BvX
dU1eMB9XW7w7+NKOAAFvdb8wm/loOBJy1U6FgNW03Hl4zsertjbJr1kEZNhJ
J9nsm4/ecuOxmV4EdN8RyV54Yj46e3aVzXEnQNdkbpFiwXyU1f/imLOCAP9L
s2p47s3HsydNq62AgErpqYbBdnq/9dk39Q8SMB33/e2rkfn/5u2to0lTFzcD
T5/f5xNzmYAZfuP1bWIMXHW7xGg7zV/9vv67ekXGv/isCJ1tt3UZ+Imp3f2K
TYDPIs3BMlMGatgx9Up1CDg6qBp6BRl4cr1s4XtDAspylf5k2jEwLNp6/eZ9
BLRtlj+cvIGBPXtmfrjvJ+Cn3DyRmK0MfNTuPXOCrodiq2R62C4Glnh4BQjS
8SFJTHlnBAP9mQYsLm8CtjCFr3jEM/DGzrztnzQJiPtDEz7JwMan6o6O0gQU
3OCttDnPwCr1NQbTwTT+YFn68iIGLi7iiCvK0nikhfLCKga2iX+40eJMQJOZ
+RWdBwxsMDV7kDRpBaNDC40VnzFw8ByXbhI9n9L5jEqxDgZ6xSxLEF1KwBJP
o+U8vQycbfvMrptBgJsCrehjDFxqtUc414qA/wOMtAZS
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-1, 12}, {0, 0.0009280799619731623}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[CapitalDelta]t ps\"", TraditionalForm], 
       FormBox["\"Amplitude W\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, LabelStyle -> 18, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"mesa 1200/100\"", TraditionalForm], 
     PlotRange -> {{-1, 12}, {0, 0.0009280799619731623}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"P = 1 mW\"", "\"P = 0.5 mW\"", "\"P = 2 mW\"", "\"P = 4 mW\"", 
       "\"P = 6 mW\"", "\"P = 0.25 mW\"", "\"P = 0.25 mW\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.237736, 0.340215, 0.575113]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.237736, 0.340215, 0.575113]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.264425, 0.423024, 0.3849]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.264425, 0.423024, 0.3849]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.416394, 0.555345, 0.24182]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.416394, 0.555345, 0.24182]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.813033, 0.766292, 0.303458]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.813033, 0.766292, 0.303458]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.812807, 0.518694, 0.303459]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.812807, 0.518694, 0.303459]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.72987, 0.239399, 0.230961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.72987, 0.239399, 0.230961]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 18, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.237736, 0.340215, 0.575113], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.15849066666666667`, 0.22681, 0.3834086666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.237736, 0.340215, 0.575113]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.237736, 0.340215, 0.575113]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.237736, 0.340215, 0.575113], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.264425, 0.423024, 0.3849], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.17628333333333335`, 0.28201600000000004`, 
                    0.25660000000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.264425, 0.423024, 0.3849]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.264425, 0.423024, 0.3849]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.264425, 0.423024, 0.3849], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.416394, 0.555345, 0.24182], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.277596, 0.37023, 0.16121333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.416394, 0.555345, 0.24182]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.416394, 0.555345, 0.24182]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.416394, 0.555345, 0.24182], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.813033, 0.766292, 0.303458], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.542022, 0.5108613333333334, 0.20230533333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.813033, 0.766292, 0.303458]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.813033, 0.766292, 0.303458]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.813033, 0.766292, 0.303458], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.812807, 0.518694, 0.303459], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5418713333333334, 0.345796, 0.20230599999999999`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.812807, 0.518694, 0.303459]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.812807, 0.518694, 0.303459]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.812807, 0.518694, 0.303459], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.72987, 0.239399, 0.230961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.48658, 0.15959933333333334`, 0.153974], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.72987, 0.239399, 0.230961]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.72987, 0.239399, 0.230961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.72987, 0.239399, 0.230961], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "18"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.689872567018275*^9, 3.6898725941834784`*^9}, 
   3.6905666764338865`*^9, 3.6905971317697287`*^9, 3.6905971873115225`*^9, 
   3.6905972403041344`*^9, 3.6907951046465454`*^9, 3.6907963588599815`*^9, 
   3.691168741846386*^9, 3.6911735701992598`*^9, 3.691174516988306*^9, 
   3.691174559538241*^9, 3.6911810776555147`*^9, 3.6911811286352816`*^9, 
   3.691181199310654*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"forFit", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"MeanFilter", "[", 
       RowBox[{
        RowBox[{"nonLogorifmicTime", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "0"}], "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"37", ";;", "300", ";;", "15"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.691168766348557*^9, 3.691168812803993*^9}, {
   3.691168990614297*^9, 3.691168995027131*^9}, {3.691169025768385*^9, 
   3.6911690603517456`*^9}, {3.691169143687755*^9, 3.6911691602414184`*^9}, 
   3.6911692265282664`*^9, {3.6911696466804247`*^9, 3.6911696967302375`*^9}, {
   3.6911699653963366`*^9, 3.6911699655102453`*^9}, 3.6911721285260725`*^9, {
   3.6911745486822567`*^9, 3.691174548757352*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"steps", " ", "=", " ", 
   RowBox[{
    RowBox[{"forFit", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.691174468084737*^9, 3.6911744952764983`*^9}, {
  3.6911745270931277`*^9, 3.691174566583606*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"forFit", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<P = 1 mW\>\"", ",", "\"\<P = 0.5 mW\>\"", ",", "\"\<P = 2 mW\>\"", 
      ",", "\"\<P = 4 mW\>\"", ",", "\"\<P = 6 mW\>\"", ",", 
      "\"\<P = 0.25 mW\>\"", ",", "\"\<P = 0.25 mW\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<mesa 1200/100\>\""}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[CapitalDelta]t ps\>\"", ",", "\"\<Amplitude W\>\""}], 
     "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "18"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "12"}], "}"}], ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "\"\<DarkRainbow\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6911691718377285`*^9, 3.6911691726987424`*^9}, 
   3.691169719817193*^9, {3.6911697738530207`*^9, 3.691169893170424*^9}, 
   3.691172133158909*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0.237736, 0.340215, 0.575113]], 
        PointBox[{{0.0011756363636364446`, 0.0007762181122557578}, {
         0.7016655454545455, 0.0006166050730361701}, {1.4021553636363637`, 
         0.0005052845380961621}, {2.1026453636363636`, 
         0.0004241368247868706}, {2.803135272727273, 0.000371290796792347}, {
         3.503625181818182, 0.0003303685795629361}, {4.204115000000001, 
         0.0002990511274460201}, {4.904604818181819, 
         0.00027497953557131246`}, {5.605094727272728, 
         0.00025462044209904845`}, {6.305584636363636, 
         0.00024015360488607076`}, {7.006074454545455, 
         0.0002325693279719843}, {7.706564363636365, 
         0.00022251173121251046`}, {8.407052454545456, 
         0.00021721168845286316`}, {9.107543636363635, 
         0.0002103489950582162}, {9.808033636363636, 
         0.00020524803937161187`}, {10.508523636363638`, 
         0.0002011573068826817}, {11.20901363636364, 
         0.00020211282032563785`}, {11.909503636363638`, 
         0.0002014907385396599}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0.264425, 0.423024, 0.3849]], 
        PointBox[{{0.0011756363636364446`, 0.0007578990250357377}, {
         0.7016655454545455, 0.0007004818475208984}, {1.4021553636363637`, 
         0.0006488121461024397}, {2.1026453636363636`, 
         0.0006084836492698354}, {2.803135272727273, 0.000573859395534072}, {
         3.503625181818182, 0.0005473085209763722}, {4.204115000000001, 
         0.0005294365197002349}, {4.904604818181819, 0.0004992141805464641}, {
         5.605094727272728, 0.00048192849907430934`}, {6.305584636363636, 
         0.0004685785444124992}, {7.006074454545455, 0.0004584243298840371}, {
         7.706564363636365, 0.00044221030001181905`}, {8.407052454545456, 
         0.0004275868691100638}, {9.107543636363635, 
         0.00041512118268323834`}, {9.808033636363636, 
         0.0004101906427553322}, {10.508523636363638`, 
         0.00039201589947331387`}, {11.20901363636364, 
         0.00038709018339549647`}, {11.909503636363638`, 
         0.0003826305743554343}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0.416394, 0.555345, 0.24182]], 
        PointBox[{{0.0011756363636364446`, 0.000774739338798205}, {
         0.7016655454545455, 0.0004980275640882365}, {1.4021553636363637`, 
         0.00033664567275001455`}, {2.1026453636363636`, 
         0.0002522241814748459}, {2.803135272727273, 
         0.00020270292431091093`}, {3.503625181818182, 
         0.00017042936536553014`}, {4.204115000000001, 
         0.00015382186682591766`}, {4.904604818181819, 
         0.00014318799021257315`}, {5.605094727272728, 
         0.00013246465053301046`}, {6.305584636363636, 
         0.00013441350210500149`}, {7.006074454545455, 
         0.00013522315768240862`}, {7.706564363636365, 
         0.00013386272595059125`}, {8.407052454545456, 
         0.00013204099101600352`}, {9.107543636363635, 
         0.00013548676233696933`}, {9.808033636363636, 
         0.0001386077184723222}, {10.508523636363638`, 
         0.0001451792008164697}, {11.20901363636364, 
         0.00014292906136246784`}, {11.909503636363638`, 
         0.00014631365180864644`}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0.813033, 0.766292, 0.303458]], 
        PointBox[{{0.0011756363636364446`, 0.0007552513720592692}, {
         0.7016655454545455, 0.0003040597035901626}, {1.4021553636363637`, 
         0.00015680445650048124`}, {2.1026453636363636`, 
         0.00010400071577193812`}, {2.803135272727273, 
         0.00008470142967177841}, {3.503625181818182, 
         0.00008135554798007233}, {4.204115000000001, 
         0.0000741890690029606}, {4.904604818181819, 
         0.00007629336530317338}, {5.605094727272728, 
         0.00007905497309535753}, {6.305584636363636, 
         0.0000876501865890519}, {7.006074454545455, 
         0.00008916108048890415}, {7.706564363636365, 
         0.00009766956795247447}, {8.407052454545456, 
         0.00010274088392308235`}, {9.107543636363635, 
         0.00011045968081604946`}, {9.808033636363636, 
         0.0001144217943080921}, {10.508523636363638`, 
         0.00011714688905549591`}, {11.20901363636364, 
         0.0001247287469329952}, {11.909503636363638`, 
         0.00012975439739363248`}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0.812807, 0.518694, 0.303459]], 
        PointBox[{{0.0011756363636364446`, 0.0007379536850233566}, {
         0.7016655454545455, 0.00021822852999221307`}, {1.4021553636363637`, 
         0.00009567862781044499}, {2.1026453636363636`, 
         0.00006688534631400404}, {2.803135272727273, 
         0.000053143100358263166`}, {3.503625181818182, 
         0.000052635144592862504`}, {4.204115000000001, 
         0.000056108458343109105`}, {4.904604818181819, 
         0.000059339236794255396`}, {5.605094727272728, 
         0.00006747109665634165}, {6.305584636363636, 
         0.0000779642619853536}, {7.006074454545455, 0.0000820599361950812}, {
         7.706564363636365, 0.00009007739232408347}, {8.407052454545456, 
         0.00009505169204731742}, {9.107543636363635, 
         0.00010765904647453012`}, {9.808033636363636, 
         0.00010796107321398843`}, {10.508523636363638`, 
         0.00011699901425544587`}, {11.20901363636364, 
         0.00012413784775393082`}, {11.909503636363638`, 
         0.0001292677231770897}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0.72987, 0.239399, 0.230961]], 
        PointBox[{{0.0011756363636364446`, 0.0007466493272727273}, {
         0.7016655454545455, 0.0007239350636363637}, {1.4021553636363637`, 
         0.0007059566909090908}, {2.1026453636363636`, 
         0.0006893593181818182}, {2.803135272727273, 0.0006723289909090908}, {
         3.503625181818182, 0.0006653333363636363}, {4.204115000000001, 
         0.0006557186090909091}, {4.904604818181819, 0.0006466190363636362}, {
         5.605094727272728, 0.0006399480454545455}, {6.305584636363636, 
         0.0006334978545454544}, {7.006074454545455, 0.0006217965363636363}, {
         7.706564363636365, 0.0006189220727272727}, {8.407052454545456, 
         0.0006119783636363635}, {9.107543636363635, 0.0006075714090909089}, {
         9.808033636363636, 0.0005961255454545454}, {10.508523636363638`, 
         0.0005945497818181817}, {11.20901363636364, 0.0005876493545454544}, {
         11.909503636363638`, 
         0.0005829047454545453}}]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-1, 12}, {0, 0.0007762181122557578}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Amplitude W\"", TraditionalForm], None}, {
        FormBox["\"\[CapitalDelta]t ps\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, LabelStyle -> 18, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"mesa 1200/100\"", TraditionalForm], 
     PlotRange -> {{-1, 12}, {0, 0.0007762181122557578}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"P = 1 mW\"", "\"P = 0.5 mW\"", "\"P = 2 mW\"", "\"P = 4 mW\"", 
       "\"P = 6 mW\"", "\"P = 0.25 mW\"", "\"P = 0.25 mW\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.237736, 0.340215, 0.575113]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.237736, 0.340215, 0.575113]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.264425, 0.423024, 0.3849]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.264425, 0.423024, 0.3849]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.416394, 0.555345, 0.24182]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.416394, 0.555345, 0.24182]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.813033, 0.766292, 0.303458]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.813033, 0.766292, 0.303458]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.812807, 0.518694, 0.303459]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.812807, 0.518694, 0.303459]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #5}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.72987, 0.239399, 0.230961]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.72987, 0.239399, 0.230961]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 18, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.237736, 0.340215, 0.575113], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.15849066666666667`, 0.22681, 0.3834086666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.237736, 0.340215, 0.575113]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.237736, 0.340215, 0.575113]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.237736, 0.340215, 0.575113], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.264425, 0.423024, 0.3849], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.17628333333333335`, 0.28201600000000004`, 
                    0.25660000000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.264425, 0.423024, 0.3849]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.264425, 0.423024, 0.3849]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.264425, 0.423024, 0.3849], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.416394, 0.555345, 0.24182], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.277596, 0.37023, 0.16121333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.416394, 0.555345, 0.24182]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.416394, 0.555345, 0.24182]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.416394, 0.555345, 0.24182], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.813033, 0.766292, 0.303458], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.542022, 0.5108613333333334, 0.20230533333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.813033, 0.766292, 0.303458]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.813033, 0.766292, 0.303458]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.813033, 0.766292, 0.303458], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.812807, 0.518694, 0.303459], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5418713333333334, 0.345796, 0.20230599999999999`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.812807, 0.518694, 0.303459]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.812807, 0.518694, 0.303459]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.812807, 0.518694, 0.303459], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.72987, 0.239399, 0.230961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.48658, 0.15959933333333334`, 0.153974], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.72987, 0.239399, 0.230961]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.72987, 0.239399, 0.230961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.72987, 0.239399, 0.230961], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "18"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.691169173160881*^9, 3.6911692290528927`*^9, {3.691169665665831*^9, 
   3.691169720346052*^9}, 3.6911697897991877`*^9, {3.6911698762986345`*^9, 
   3.6911698937188044`*^9}, 3.691169966924138*^9, 3.691172140188967*^9, 
   3.691173653644232*^9, 3.6911810817591567`*^9, 3.6911811338012304`*^9, 
   3.6911812157884164`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"w", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"3.3", "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"i", "/", ".5"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{".25", ",", ".5", ",", "1", ",", "2", ",", "4", ",", "6"}], 
       "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.691170497126237*^9, 3.691170519988781*^9}, {
  3.6911705575217147`*^9, 3.6911705755802145`*^9}, {3.691170621155021*^9, 
  3.6911706476882315`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.3334523779156067`", ",", "3.3`", ",", "4.666904755831213`", ",", "6.6`", 
   ",", "9.333809511662427`", ",", "11.431535329954588`"}], "}"}]], "Output",
 CellChangeTimes->{3.691170650706783*^9, 3.6911736576515255`*^9, 
  3.6911810836595974`*^9, 3.6911811457396836`*^9, 3.6911812246020837`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"solIn", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"p", "''"}], "[", "x", "]"}], "+", 
           RowBox[{"a", "*", 
            RowBox[{
             RowBox[{"p", "'"}], "[", "x", "]"}]}], "+", 
           RowBox[{"a", "*", "r", "*", 
            RowBox[{"p", "[", "x", "]"}]}], "+", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"w", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ")"}], "^", "2"}], "/", "n"}],
             "*", 
            RowBox[{"p", "[", "x", "]"}], "*", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "x"}], "*", "c"}], "]"}]}]}], "\[Equal]", 
          RowBox[{
           RowBox[{"10", "^", "3"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"w", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}], "^", "2"}], "*", "e", 
           "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "x"}], "*", "c"}], "]"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{"p", "[", "0", "]"}], "==", "0"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"p", "'"}], "[", "0", "]"}], "==", "0"}]}], "}"}], ",", 
       "  ", 
       RowBox[{"p", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", " ", "12"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{"forFit", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"p", "[", "x", "]"}], "/", "n"}], "/", "e"}], "/", 
             RowBox[{"10", "^", "3"}]}]}], ")"}], "/", 
          RowBox[{
           RowBox[{
            RowBox[{"forFit", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], "^", 
           RowBox[{"-", "1"}]}]}], " ", "/.", " ", "solIn"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "12"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "14."}], "}"}], ",", " ", "1", ",", "20"}], "}"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", "0.762"}], "}"}], ",", "0.1", ",", "1.2"}], "}"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "3.38"}], "}"}], ",", "0.1", ",", "3.5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e", ",", "3.22"}], "}"}], ",", "1", ",", "20"}], "}"}], ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", "0.010623`"}], "}"}], ",", " ", "0", ",", " ", 
     "0.015"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6894493913522234`*^9, 3.6894494148674903`*^9}, {
   3.6894495539930716`*^9, 3.6894495555806327`*^9}, {3.6897885695626354`*^9, 
   3.6897886124284706`*^9}, {3.68978871735724*^9, 3.6897887745132885`*^9}, {
   3.6897888063395176`*^9, 3.689788827610076*^9}, {3.689788896587932*^9, 
   3.6897890210231028`*^9}, {3.689789310822097*^9, 3.6897894242741327`*^9}, {
   3.6898728237640133`*^9, 3.68987293744545*^9}, {3.6898731122956724`*^9, 
   3.689873236775756*^9}, 3.689873454149739*^9, {3.6905670536243906`*^9, 
   3.6905671581475267`*^9}, {3.690567206399689*^9, 3.6905672099567156`*^9}, {
   3.69056748888338*^9, 3.6905675476871023`*^9}, {3.69056812093089*^9, 
   3.69056812098693*^9}, {3.690597218652568*^9, 3.6905972224709587`*^9}, {
   3.6905973147248745`*^9, 3.6905973188606033`*^9}, {3.6907975748095813`*^9, 
   3.6907976407262535`*^9}, {3.690797757511738*^9, 3.6907977923207064`*^9}, {
   3.690801046921778*^9, 3.690801050372395*^9}, {3.690801094134451*^9, 
   3.690801122181487*^9}, {3.690801219577015*^9, 3.6908012471104155`*^9}, {
   3.690801301728165*^9, 3.6908013145436115`*^9}, {3.6908013691216984`*^9, 
   3.690801370693468*^9}, {3.6908014974489384`*^9, 3.6908014978799562`*^9}, {
   3.6911706713022876`*^9, 3.6911706945952773`*^9}, {3.6911722120429697`*^9, 
   3.691172220893932*^9}, {3.691173670625762*^9, 3.691173680040826*^9}, {
   3.691173760454387*^9, 3.6911737725565915`*^9}, 3.6911820230040045`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1., $CellContext`c$$ = 
    0.762, $CellContext`e$$ = 3.22, $CellContext`n$$ = 
    3.38, $CellContext`r$$ = 0.010623, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 14.}, 1, 20}, {{
       Hold[$CellContext`c$$], 0.762}, 0.1, 1.2}, {{
       Hold[$CellContext`n$$], 3.38}, 0.1, 3.5}, {{
       Hold[$CellContext`e$$], 3.22}, 1, 20}, {{
       Hold[$CellContext`r$$], 0.010623}, 0, 0.015}}, Typeset`size$$ = {
    360., {100., 106.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$123053$$ = 
    0, $CellContext`c$123054$$ = 0, $CellContext`n$123055$$ = 
    0, $CellContext`e$123056$$ = 0, $CellContext`r$123057$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 14., $CellContext`c$$ = 
        0.762, $CellContext`e$$ = 3.22, $CellContext`n$$ = 
        3.38, $CellContext`r$$ = 0.010623}, "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$123053$$, 0], 
        Hold[$CellContext`c$$, $CellContext`c$123054$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$123055$$, 0], 
        Hold[$CellContext`e$$, $CellContext`e$123056$$, 0], 
        Hold[$CellContext`r$$, $CellContext`r$123057$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`solIn = 
        NDSolve[{
          Derivative[2][$CellContext`p][$CellContext`x] + $CellContext`a$$ 
             Derivative[
              1][$CellContext`p][$CellContext`x] + $CellContext`a$$ \
$CellContext`r$$ $CellContext`p[$CellContext`x] + (
              Part[$CellContext`w, 
                 1]^2/$CellContext`n$$) $CellContext`p[$CellContext`x] 
             Exp[(-$CellContext`x) $CellContext`c$$] == 
           10^3 Part[$CellContext`w, 1]^2 $CellContext`e$$ 
            Exp[(-$CellContext`x) $CellContext`c$$], $CellContext`p[0] == 0, 
           Derivative[1][$CellContext`p][0] == 0}, 
          $CellContext`p[$CellContext`x], {$CellContext`x, 0, 12}]; Show[
         ListPlot[
          Part[$CellContext`forFit, 1]], 
         Plot[
          
          ReplaceAll[(
            1 - (($CellContext`p[$CellContext`x]/$CellContext`n$$)/$\
CellContext`e$$)/10^3)/Part[
             Part[$CellContext`forFit, 1], 1, 
             2]^(-1), $CellContext`solIn], {$CellContext`x, 0, 12}, PlotRange -> 
          All], PlotRange -> All]), 
      "Specifications" :> {{{$CellContext`a$$, 14.}, 1, 
         20}, {{$CellContext`c$$, 0.762}, 0.1, 
         1.2}, {{$CellContext`n$$, 3.38}, 0.1, 
         3.5}, {{$CellContext`e$$, 3.22}, 1, 
         20}, {{$CellContext`r$$, 0.010623}, 0, 0.015}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {200., 207.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6911736947202034`*^9, {3.6911737608588343`*^9, 3.691173772862855*^9}, 
   3.6911810848267593`*^9, 3.691181152433034*^9, 3.691181227944886*^9, 
   3.691182023633643*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dat", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Total", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"forFit", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[IndentingNewLine]", 
           "-", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"NDSolveValue", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"p", "''"}], "[", "x", "]"}], "+", 
                    RowBox[{"a", "*", 
                    RowBox[{
                    RowBox[{"p", "'"}], "[", "x", "]"}]}], "+", 
                    RowBox[{"a", "*", "r", "*", 
                    RowBox[{"p", "[", "x", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"w", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "^", "2"}], "/", "n"}], 
                    "*", 
                    RowBox[{"p", "[", "x", "]"}], "*", 
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "x"}], "*", "c"}], "]"}]}]}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"10", "^", "3"}], "*", 
                    RowBox[{
                    RowBox[{"w", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "^", "2"}], "*", "e", "*", 
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "x"}], "*", "c"}], "]"}]}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"p", "[", "0", "]"}], "==", "0"}], ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"p", "'"}], "[", "0", "]"}], "==", "0"}]}], "}"}],
                   ",", "  ", "p", ",", 
                  RowBox[{"{", 
                   RowBox[{"x", ",", "0", ",", "12"}], "}"}]}], "]"}], "/@", 
                "steps"}], "/", "n"}], "/", "e"}], "/", 
             RowBox[{"10", "^", "3"}]}], "/", 
            RowBox[{
             RowBox[{
              RowBox[{"forFit", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], "^", 
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}]}]}], "-", 
           RowBox[{
            RowBox[{"forFit", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ")"}], "^", "2"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Column", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Row", "[", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "a", ",", "\"\< \>\"", ",", "c", ",", "\"\< \>\"", ",", "n", ",", 
           "\"\< \>\"", ",", "e", ",", "\"\< \>\"", ",", "r"}], "}"}], 
         "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Grid", "[", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Column", "[", "dat", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"face", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"dat", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "*", 
                RowBox[{"10", "^", "6"}]}], ",", " ", 
               RowBox[{
                RowBox[{"dat", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "*", 
                RowBox[{"10", "^", "6"}]}], ",", " ", 
               RowBox[{
                RowBox[{"dat", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "*", 
                RowBox[{"10", "^", "6"}]}], ",", " ", 
               RowBox[{
                RowBox[{"dat", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "*", 
                RowBox[{"10", "^", "6"}]}], ",", " ", 
               RowBox[{
                RowBox[{"dat", "[", 
                 RowBox[{"[", "5", "]"}], "]"}], "*", 
                RowBox[{"10", "^", "6"}]}], ",", " ", 
               RowBox[{
                RowBox[{"dat", "[", 
                 RowBox[{"[", "6", "]"}], "]"}], "*", 
                RowBox[{"10", "^", "6"}]}], ",", " ", "5", ",", " ", "5", ",",
                " ", "5", ",", " ", "5"}], "}"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"face", "[", 
             RowBox[{"{", 
              RowBox[{
              "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "5",
                ",", "5", ",", "5", ",", "5"}], "}"}], "]"}]}], "}"}], "}"}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], 
      "\[IndentingNewLine]", ",", "Center"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "10."}], "}"}], ",", " ", "1", ",", "30"}], "}"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", "0.762"}], "}"}], ",", "0.1", ",", "4"}], "}"}], ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "3.38"}], "}"}], ",", "0.1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e", ",", "3.22"}], "}"}], ",", "1", ",", "20"}], "}"}], ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", "0.010623`"}], "}"}], ",", " ", 
     RowBox[{"10", "^", 
      RowBox[{"-", "6"}]}], ",", " ", "0.02"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.691174422266426*^9, 3.691174444127349*^9}, {
   3.6911746218081427`*^9, 3.691174681016698*^9}, {3.6911780166446304`*^9, 
   3.691178091891197*^9}, {3.6911781285594816`*^9, 3.69117814219384*^9}, {
   3.691178180962118*^9, 3.69117823788844*^9}, 3.69117847657022*^9, {
   3.691178952954882*^9, 3.691179003365018*^9}, {3.691179155946826*^9, 
   3.69117916334624*^9}, {3.6911792319277887`*^9, 3.69117923492274*^9}, {
   3.6911792743778696`*^9, 3.6911793705811133`*^9}, {3.691179417173209*^9, 
   3.691179454877122*^9}, {3.691179551491323*^9, 3.6911795694084377`*^9}, {
   3.691180990941037*^9, 3.6911810493829007`*^9}, 3.6911813898273983`*^9, {
   3.69118144515471*^9, 3.6911815713698206`*^9}, {3.6911816683071127`*^9, 
   3.691181733620428*^9}, {3.691181936636109*^9, 3.6911819733061657`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 17.85, $CellContext`c$$ = 
    3.3600000000000003`, $CellContext`e$$ = 3.22, $CellContext`n$$ = 
    4.04, $CellContext`r$$ = 0.011840408, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 10.}, 1, 30}, {{
       Hold[$CellContext`c$$], 0.762}, 0.1, 4}, {{
       Hold[$CellContext`n$$], 3.38}, 0.1, 5}, {{
       Hold[$CellContext`e$$], 3.22}, 1, 20}, {{
       Hold[$CellContext`r$$], 0.010623}, 
      Rational[1, 1000000], 0.02}}, Typeset`size$$ = {464., {95.5, 102.5}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$104559$$ = 0, $CellContext`c$104560$$ = 
    0, $CellContext`n$104561$$ = 0, $CellContext`e$104562$$ = 
    0, $CellContext`r$104563$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 10., $CellContext`c$$ = 
        0.762, $CellContext`e$$ = 3.22, $CellContext`n$$ = 
        3.38, $CellContext`r$$ = 0.010623}, "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$104559$$, 0], 
        Hold[$CellContext`c$$, $CellContext`c$104560$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$104561$$, 0], 
        Hold[$CellContext`e$$, $CellContext`e$104562$$, 0], 
        Hold[$CellContext`r$$, $CellContext`r$104563$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ($CellContext`dat = Table[
          Total[(Part[
              Part[$CellContext`forFit, $CellContext`j], 1, 2] - (((Map[
                 NDSolveValue[{
                  Derivative[
                    2][$CellContext`p][$CellContext`x] + $CellContext`a$$ 
                    Derivative[
                    1][$CellContext`p][$CellContext`x] + $CellContext`a$$ \
$CellContext`r$$ $CellContext`p[$CellContext`x] + (
                    Part[$CellContext`w, $CellContext`j]^2/$CellContext`n$$) \
$CellContext`p[$CellContext`x] Exp[(-$CellContext`x) $CellContext`c$$] == 
                   10^3 Part[$CellContext`w, $CellContext`j]^2 \
$CellContext`e$$ Exp[(-$CellContext`x) $CellContext`c$$], $CellContext`p[0] == 
                   0, Derivative[1][$CellContext`p][0] == 
                   0}, $CellContext`p, {$CellContext`x, 0, 
                   12}], $CellContext`steps]/$CellContext`n$$)/$CellContext`e$\
$)/10^3)/Part[
              Part[$CellContext`forFit, $CellContext`j], 1, 2]^(-1) - Part[
             Part[$CellContext`forFit, $CellContext`j], All, 
             2])^2], {$CellContext`j, 1, 6}]; Column[{
          
          Row[{$CellContext`a$$, " ", $CellContext`c$$, " ", $CellContext`n$$,
             " ", $CellContext`e$$, " ", $CellContext`r$$}], 
          Grid[{{
             Column[$CellContext`dat], 
             $CellContext`face[{
              Part[$CellContext`dat, 1] 10^6, Part[$CellContext`dat, 2] 10^6, 
               Part[$CellContext`dat, 3] 10^6, Part[$CellContext`dat, 4] 10^6,
                Part[$CellContext`dat, 5] 10^6, Part[$CellContext`dat, 6] 
               10^6, 5, 5, 5, 5}], 
             $CellContext`face[{0, 0, 0, 0, 0, 0, 5, 5, 5, 5}]}}]}, Center]), 
      "Specifications" :> {{{$CellContext`a$$, 10.}, 1, 
         30}, {{$CellContext`c$$, 0.762}, 0.1, 4}, {{$CellContext`n$$, 3.38}, 
         0.1, 5}, {{$CellContext`e$$, 3.22}, 1, 
         20}, {{$CellContext`r$$, 0.010623}, 
         Rational[1, 1000000], 0.02}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{515., {197., 204.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.691174644206081*^9, 3.691174681438971*^9}, {
   3.6911780841428223`*^9, 3.691178092289888*^9}, 3.6911781427172556`*^9, {
   3.691178187434372*^9, 3.691178238227365*^9}, 3.691178477867468*^9, 
   3.691179005482691*^9, {3.691179157392007*^9, 3.6911791637836475`*^9}, 
   3.6911792352988214`*^9, {3.6911793578614445`*^9, 3.691179371074778*^9}, {
   3.691179445054844*^9, 3.691179455496143*^9}, {3.69117956213474*^9, 
   3.6911795700001383`*^9}, 3.6911812451237993`*^9, 3.6911813917956085`*^9, 
   3.6911815236183543`*^9, 3.6911815722362204`*^9, 3.6911816711277514`*^9, 
   3.691181734147855*^9, {3.691181954227106*^9, 3.6911819736886826`*^9}}]
}, Open  ]]
},
WindowSize->{1366, 688},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 159, 3, 30, "Input"],
Cell[720, 25, 328, 7, 69, "Input"],
Cell[1051, 34, 1632, 39, 240, "Input"],
Cell[2686, 75, 1263, 35, 126, "Input"],
Cell[3952, 112, 2912, 82, 221, "Input"],
Cell[6867, 196, 2925, 83, 240, "Input"],
Cell[9795, 281, 1202, 35, 107, "Input"],
Cell[11000, 318, 4002, 110, 297, "Input"],
Cell[15005, 430, 160, 3, 30, "Input"],
Cell[15168, 435, 669, 15, 52, "Input"],
Cell[15840, 452, 729, 23, 30, "Input"],
Cell[16572, 477, 796, 22, 69, "Input"],
Cell[CellGroupData[{
Cell[17393, 503, 1189, 29, 50, "Input"],
Cell[18585, 534, 65935, 1188, 547, "Output"]
}, Open  ]],
Cell[84535, 1725, 927, 21, 30, "Input"],
Cell[85465, 1748, 342, 9, 30, "Input"],
Cell[CellGroupData[{
Cell[85832, 1761, 1543, 39, 69, "Input"],
Cell[87378, 1802, 33657, 661, 530, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121072, 2468, 596, 17, 30, "Input"],
Cell[121671, 2487, 337, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122045, 2498, 4779, 119, 88, "Input"],
Cell[126827, 2619, 3784, 76, 457, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130648, 2700, 6944, 168, 392, "Input"],
Cell[137595, 2870, 4952, 89, 418, "Output"]
}, Open  ]]
}
]
*)

